@using HRApp.Data
@using HRApp.Models
@inject DialogService DialogService
@inject DataContext DbContext

<RadzenTemplateForm TItem="TimeTrackingEntry" Data="@model" Submit="@OnSubmit">
    <RadzenStack Gap="1rem">
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Wrap="FlexWrap.Wrap">
            <RadzenLabel Text="Title" Style="width: 6rem;"/>
            <RadzenTextBox @bind-Value="@model.Text" Name="Text" Style="width: 12rem;"/>
            <RadzenRequiredValidator Component="Text" Text="Title is required"/>
        </RadzenStack>
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Wrap="FlexWrap.Wrap">
            <RadzenLabel Text="Start" Style="width: 6rem;"/>
            <RadzenDatePicker @bind-Value="@model.StartDate" Name="Start" ShowTime="true" Style="width: 12rem;"/>
            <RadzenRequiredValidator Component="Start" Text="Start is required"/>
        </RadzenStack>
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Wrap="FlexWrap.Wrap">
            <RadzenLabel Text="End" Style="width: 6rem;"/>
            <RadzenDatePicker Name="End" @bind-Value="@model.EndDate" ShowTime="true" Style="width: 12rem;"/>
            <RadzenRequiredValidator Component="End" Text="End is required"/>
        </RadzenStack>
        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End">
            <RadzenButton ButtonType="ButtonType.Submit" Text="Save"/>
        </RadzenStack>
    </RadzenStack>
</RadzenTemplateForm>

@code {
    [Parameter] public TimeTrackingEntry Appointment { get; set; }

    TimeTrackingEntry model = new();

    protected override void OnParametersSet()
    {
        model = Appointment;
    }

    async void OnSubmit(TimeTrackingEntry model)
    {
        if (string.IsNullOrEmpty(model.Id))
        {
            model.Id = Guid.NewGuid().ToString();
        }
        DbContext.TimeTrackingEntries.Update(model);
        await DbContext.SaveChangesAsync();
        DialogService.Close(model);
    }
}