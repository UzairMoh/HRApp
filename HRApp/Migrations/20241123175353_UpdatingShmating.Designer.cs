// <auto-generated />
using System;
using HRApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HRApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241123175353_UpdatingShmating")]
    partial class UpdatingShmating
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("HRApp.Models.CalendarEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ApprovedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("End")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCompanyWide")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Start")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("CalendarEvents");
                });

            modelBuilder.Entity("HRApp.Models.Employees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BenefitsPackage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ContractType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsOvertimeEligible")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LeaveDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Salary")
                        .HasColumnType("TEXT");

                    b.Property<int>("VacationDaysPerYear")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WorkingHoursPerWeek")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Employee", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 999,
                            BenefitsPackage = "Executive",
                            ContractType = "Permanent",
                            Department = "Engineering",
                            Email = "admin@hrapp.co.uk",
                            FirstName = "Admin",
                            Gender = "PreferNotToSay",
                            IsOvertimeEligible = false,
                            JoinDate = new DateTime(2022, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Account",
                            Salary = 99999.99m,
                            VacationDaysPerYear = 30,
                            WorkingHoursPerWeek = 40
                        },
                        new
                        {
                            Id = 1,
                            BenefitsPackage = "Standard",
                            ContractType = "Permanent",
                            Department = "Engineering",
                            Email = "uzairmohammedpc@gmail.com",
                            FirstName = "Uzair",
                            Gender = "Male",
                            IsOvertimeEligible = true,
                            JoinDate = new DateTime(2022, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Mohammed",
                            Salary = 65000.00m,
                            VacationDaysPerYear = 25,
                            WorkingHoursPerWeek = 40
                        },
                        new
                        {
                            Id = 2,
                            BenefitsPackage = "Standard",
                            ContractType = "Permanent",
                            Department = "Engineering",
                            Email = "jwilson@company.com",
                            FirstName = "James",
                            Gender = "Male",
                            IsOvertimeEligible = true,
                            JoinDate = new DateTime(2022, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Wilson",
                            Salary = 62000.00m,
                            VacationDaysPerYear = 25,
                            WorkingHoursPerWeek = 40
                        });
                });

            modelBuilder.Entity("HRApp.Models.TimeOffRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AdminComments")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ReviewedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReviewedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("TimeOffRequests");
                });

            modelBuilder.Entity("HRApp.Models.CalendarEvent", b =>
                {
                    b.HasOne("HRApp.Models.Employees", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HRApp.Models.TimeOffRequest", b =>
                {
                    b.HasOne("HRApp.Models.Employees", "Employee")
                        .WithMany("TimeOffRequests")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HRApp.Models.Employees", b =>
                {
                    b.Navigation("TimeOffRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
